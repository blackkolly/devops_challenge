apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
      
      - job_name: 'flask-ecommerce'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - flask-ecommerce
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: flask-ecommerce
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: monitoring
data:
  flask-ecommerce.yml: |
    groups:
      - name: flask-ecommerce.rules
        rules:
          - alert: FlaskAppDown
            expr: up{job="flask-ecommerce"} == 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Flask E-commerce application is down"
              description: "Flask E-commerce application has been down for more than 5 minutes."
          
          - alert: HighResponseTime
            expr: flask_request_duration_seconds{quantile="0.95"} > 2
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High response time detected"
              description: "95th percentile response time is {{ $value }} seconds."
          
          - alert: HighErrorRate
            expr: rate(flask_request_total{status=~"5.."}[5m]) > 0.1
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High error rate detected"
              description: "Error rate is {{ $value }} errors per second."
          
          - alert: HighCPUUsage
            expr: (sum(rate(container_cpu_usage_seconds_total{pod=~"flask-ecommerce-.*"}[5m])) by (pod) * 100) > 80
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage detected"
              description: "Pod {{ $labels.pod }} CPU usage is {{ $value }}%."
          
          - alert: HighMemoryUsage
            expr: (sum(container_memory_working_set_bytes{pod=~"flask-ecommerce-.*"}) by (pod) / sum(container_spec_memory_limit_bytes{pod=~"flask-ecommerce-.*"}) by (pod) * 100) > 80
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage detected"
              description: "Pod {{ $labels.pod }} memory usage is {{ $value }}%."
          
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total{pod=~"flask-ecommerce-.*"}[15m]) > 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Pod is crash looping"
              description: "Pod {{ $labels.pod }} is restarting frequently."
